{"version":3,"sources":["bibliotheca/views.cljs"],"mappings":";AAKA,iCAAA,jCAAMA;AAAN,AAAA,0FAAA,mEAAA,mFAAA,kDAAA,iCAAA,mFAAA,8CAAA;;AAKA,+BAAA,/BAAMC,sEAAYC;AAAlB,AAAA,0FAAA,+EAAA,mFAAA,iEAAA,mFAAA,kDAAA,oCAAA,mFAAA,8CAIQ,CAAA,+EAAwCA;;AAEhD,2BAAA,3BAAMC;AAAN,AAAA,0FAAA,iEAAA,mFAAA,kDAAA,sBAAA,mFAAA,8CAAA;;AAKA,iCAAA,jCAAMC;AAAN,AACE,oBAAA,AAAAC,hBAAMC,gCAAe,sDAAA,mFAAA,zIAACC;kBAAtB,AAAAF,dACMG,8BAAa,sDAAA,mFAAA,zIAACD;gBADpB,AAAAF,ZAEMI,4BAAW,sDAAA,mFAAA,zIAACF;AAFlB,AAAA,0FAAA,8EAAA,mFAAA,iPAAA,mFAAA,8EAAA,mFAAA,kFAAA,2CAAA,yLAAA,6DAAA,zwBAKI,CAAA,sEAAA,gEAAA,/EAAgBD,kEAAqBE,idAG5B,kHAAA,AAAA,SAAA,zHAAM,uDAAA,vDAACE,6CAAED;AARtB,AASiB,8BAAA,mFAAA,sEAAA,hLAACE;WATlB,gBAAA,mFAAA,kFAAA,2CAAA,wLAAA,6DAAA,7LAYa,iHAAA,AAAA,SAAA,xHAAM,uDAAA,vDAACD,6CAAED;AAZtB,AAaiB,8BAAA,mFAAA,sEAAA,hLAACE;WAblB;;AAgBF,iCAAA,jCAAMC;AAAN,AACE,gBAAA,AAAAP,ZAAMI,4BAAW,sDAAA,mFAAA,zIAACF;AAAlB,AAAA,0FAAA,mDAAA,mFAEIH,uCACD,iBAAAS,WAAMJ;IAANI,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,0FACUE;;;KADV;AAAA,0FAAA,mDAAA;;;;AAAA,0FAGGA;;;;;AAER,+BAAA,/BAAMC;AAAN,AACE,qBAAA,AAAAX,jBAAMY,iCAAU,sDAAA,mFAAA,zIAACV;YAAjB,AAAAF,RACMH,wBAAO,sDAAA,mFAAA,zIAACK;AADd,AAEE,oBACEU;AADF,0FACYjB;;AADZ,oBAEEE;AAFF,0FAESD,6BAAWC;;AAFpB,AAAA,0FAAA,+EAAA,oHAAA,uIAAA,xKAIUC,oHACAe,uIACAN;;;;;AAGd,8BAAA,9BAAeO;AAAf,AACE,GAAU,QAAAC;AAAV;;AAAA,AACE,IAAMC,SAAO,uBAAA,vBAAgBC;AAA7B,AACE,cAAA,bAAM,AAAOD;;AACb,OAAc,AAAQC,0BAAaD","names":["bibliotheca.views/loading-view","bibliotheca.views/error-view","error","bibliotheca.views/header","bibliotheca.views/results-info","cljs.core/deref","results-count","re_frame.core.subscribe","total-count","view-mode","cljs.core._EQ_","re-frame.core/dispatch","bibliotheca.views/content-view","G__25674","cljs.core/Keyword","bibliotheca.components.table/media-table","bibliotheca.views/main-panel","loading?","bibliotheca.components.filters/filter-panel","bibliotheca.views/init-yaml","js/jsyaml","script","js/document"],"sourcesContent":["(ns bibliotheca.views\n  (:require [re-frame.core :as rf]\n            [bibliotheca.components.table :as table]\n            [bibliotheca.components.filters :as filters]))\n\n(defn loading-view []\n  [:div.loading\n   [:h1 \"Loading Bibliotheca...\"]\n   [:p \"Preparing your media library...\"]])\n\n(defn error-view [error]\n  [:div.app-container\n   [:div.header\n    [:h1 \"Error Loading Bibliotheca\"]\n    [:p (str \"Sorry, we encountered an error: \" error)]]])\n\n(defn header []\n  [:div.header\n   [:h1 \"Bibliotheca\"]\n   [:p \"A curated collection of books, articles, videos and other media resources\"]])\n\n(defn results-info []\n  (let [results-count @(rf/subscribe [:results-count])\n        total-count @(rf/subscribe [:total-count])\n        view-mode @(rf/subscribe [:view-mode])]\n    [:div.results-info\n     [:div.results-count\n      (str \"Showing \" results-count \" of \" total-count \" items\")]\n     [:div.view-controls\n      [:button.view-button\n       {:class (when (= view-mode :table) \"active\")\n        :on-click #(rf/dispatch [:set-view-mode :table])}\n       \"Table\"]\n      [:button.view-button\n       {:class (when (= view-mode :cards) \"active\")\n        :on-click #(rf/dispatch [:set-view-mode :cards])}\n       \"Cards\"]]]))\n\n(defn content-view []\n  (let [view-mode @(rf/subscribe [:view-mode])]\n    [:div\n     [results-info]\n     (case view-mode\n       :table [table/media-table]\n       :cards [:div \"Cards view - coming soon\"]\n       [table/media-table])]))\n\n(defn main-panel []\n  (let [loading? @(rf/subscribe [:loading?])\n        error @(rf/subscribe [:error])]\n    (cond\n      loading? [loading-view]\n      error [error-view error]\n      :else [:div.app-container\n             [header]\n             [filters/filter-panel]\n             [content-view]])))\n\n;; Add js-yaml to global scope for YAML parsing\n(defn ^:export init-yaml []\n  (when-not (exists? js/jsyaml)\n    (let [script (.createElement js/document \"script\")]\n      (set! (.-src script) \"https://cdnjs.cloudflare.com/ajax/libs/js-yaml/4.1.0/js-yaml.min.js\")\n      (.appendChild (.-head js/document) script))))"]}